import {Component} from 'react'
import ListContext from './context/ListContext'
import Game from './components/Game'
import Rules from './components/Rules'
import './App.css'

const choicesList = [
  {
    id: 'ROCK',
    imageUrl:
      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',
  },
  {
    id: 'SCISSORS',
    imageUrl:
      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',
  },
  {
    id: 'PAPER',
    imageUrl:
      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',
  },
]

class App extends Component {
  state = {
    score: 0,
    userChoice: null,
    opponentChoice: null,
    isGameResultView: false,
  }

  getRandomChoice = () => {
    const randomIndex = Math.floor(Math.random() * choicesList.length)
    return choicesList[randomIndex]
  }

  onButtonClicked = id => {
    const userChoice = choicesList.find(choice => choice.id === id)
    const opponentChoice = this.getRandomChoice()

    let resultText = ''
    const {score} = this.state
    let newScore = score

    if (userChoice.id === opponentChoice.id) {
      resultText = 'IT IS DRAW'
    } else if (
      (userChoice.id === 'ROCK' && opponentChoice.id === 'SCISSORS') ||
      (userChoice.id === 'SCISSORS' && opponentChoice.id === 'PAPER') ||
      (userChoice.id === 'PAPER' && opponentChoice.id === 'ROCK')
    ) {
      resultText = 'YOU WON'
      newScore += 1
    } else {
      resultText = 'YOU LOSE'
      newScore -= 1
    }

    this.setState({
      score: newScore,
      userChoice,
      opponentChoice,
      isGameResultView: true,
      resultText,
    })
  }

  resetGame = () => {
    this.setState({
      userChoice: null,
      opponentChoice: null,
      isGameResultView: false,
    })
  }

  render() {
    const {
      score,
      userChoice,
      opponentChoice, // Opponent's choice state
      isGameResultView,
      resultText,
    } = this.state

    return (
      <ListContext.Provider
        value={{
          score,
          onButtonClicked: this.onButtonClicked,
          resetGame: this.resetGame,
          userChoice,
          opponentChoice,
          isGameResultView,
          resultText,
        }}
      >
        <div className="bg">
          <Game />
          <div className="rules">
            <Rules />
          </div>
        </div>
      </ListContext.Provider>
    )
  }
}

export default App
